{
    "ui": {
        "apiKey": {
            "key": "Key",
            "keyIsRequired": "Key is required"
        },
        "header": {
            "logout": "Logout",
            "login": "Login",
            "language": "Language",
            "theme": "Theme",
            "themes": { "system": "System", "light": "Light", "dark": "Dark" }
        },
        "agent": {
            "name": "Name",
            "connection": "Connection",
            "model": "Model",
            "systemPrompt": "System Prompt",
            "params": "Parameters",
            "streaming": "Streaming",
            "tools": "Tools",
            "nameIsRequired": "Agent name is required",
            "connectionIsRequired": "Connection is required",
            "connectionIsInvalid": "Invalid connection",
            "modelIsRequired": "Model is required",
            "systemPromptIsRequired": "System prompt is required",
            "streamingIsRequired": "Streaming value is required",
            "invalidConnection": "Invalid connection"
        },
        "baseEntityModel": {
            "createdDate": "Created Date",
            "createdBy": "Created By",
            "updatedBy": "Updated By",
            "updatedDate": "Updated Date",
            "id": "ID"
        },
        "chat": {
            "title": "Title",
            "agent": "Agent",
            "titleIsRequired": "Chat title is required",
            "agentIsRequired": "Agent is required",
            "agentIsInvalid": "Invalid agent",
            "messagesAreRequired": "Messages are required",
            "reference": "Reference",
            "referenceIsRequired": "Reference is required"
        },
        "connection": {
            "name": "Name",
            "apiBaseUrl": "API Base URL",
            "apiKey": "API Key",
            "nameIsRequired": "Connection name is required",
            "apiBaseUrlIsRequired": "API base URL is required",
            "apiBaseUrlIsInvalid": "Invalid base URL",
            "failed": "Connection failed"
        },
        "mcpServer": {
            "type": "Server Type",
            "command": "Command",
            "envVars": "Environment Variables",
            "sseUrl": "SSE URL",
            "sseApiHeaderAuth": "SSE Header Authorization",
            "commandIsRequired": "Command is required",
            "sseUrlIsRequired": "SSE URL is required",
            "sseUrlIsInvalid": "Invalid SSE URL",
            "envVarsMustBeStrings": "All environment variables must be strings",
            "failed": "Connection to MCP server failed",
            "args": "Arguments",
            "name": "Name"
        },
        "message": {
            "source": "Source",
            "content": "Content",
            "sourceIsRequired": "Message source is required",
            "sourceIsInvalid": "Invalid message source",
            "contentIsRequired": "Message content is required",
            "sendDate": "Sent date",
            "sendDateIsRequired": "Sent date is required",
            "invalidSendDate": "Sent date is invalid"
        },
        "modelParams": {
            "topP": "Top P",
            "topK": "Top K",
            "temperature": "Temperature",
            "timeout": "Timeout (seconds)"
        },
        "tool": {
            "mcpServer": "MCP Server",
            "name": "Tool Name",
            "description": "Tool Description",
            "parameters": "Tool Parameters",
            "mcpServerIsRequired": "MCP server is required",
            "mcpServerIsInvalid": "Invalid MCP server",
            "nameIsRequired": "Tool name is required"
        },
        "toolParameter": {
            "name": "Parameter Name",
            "type": "Type",
            "description": "Description",
            "required": "Required",
            "defaultValue": "Default Value",
            "nameIsRequired": "Parameter name is required",
            "typeIsRequired": "Parameter type is required",
            "typeIsInvalid": "Invalid parameter type",
            "requiredIsRequired": "Required flag must be set"
        },
        "userProfile": {
            "isAdmin": "Is admin",
            "isAdminIsRequired": "Is admin is required"
        },
        "getUserByKeyResponse": {
            "emailIsRequired": "Email is required",
            "emailIsInvalid": "Email is invalid",
            "emailVerifiedIsRequired": "Email verified is required",
            "subIsRequired": "Sub is required",
            "email": "Email",
            "emailVerified": "Email verified",
            "sub": "Sub"
        },
        "pagedResponse": {
            "data": "Data",
            "elementsPerPage": "Elements per page",
            "totalCount": "Total count",
            "page": "Page"
        },
        "pagedRequest": {
            "page": "Page",
            "elementsPerPage": "Elements per page"
        },
        "healthResponse": {
            "healthy": "Healthy",
            "version": "Version"
        }
    }
}
