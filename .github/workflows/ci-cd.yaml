name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY_IMAGE: "ghcr.io/alinflorin/agenticxp"
  VERSION: "1.0.0"

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  docker-build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runs-on: ubuntu-latest
          - platform: linux/arm64
            runs-on: ubuntu-24.04-arm

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Login to GHCR (only on main)
        uses: docker/login-action@v3
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Build
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
          platforms: ${{ matrix.platform }}
          tags: ${{ env.REGISTRY_IMAGE }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1


  docker-merge:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - docker-build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GHCR (only on main)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
            -t ${{ env.REGISTRY_IMAGE }}:${{ env.VERSION }} \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

  helm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract and bump version
        id: version
        run: |
          sed -i "s/^version:.*/version: $VERSION/" chart/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"$VERSION\"/" chart/Chart.yaml

      - name: Log in to GHCR for Helm
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin

      - name: Cache Helm dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: chart/charts
          key: ${{ runner.os }}-helm-deps-${{ hashFiles('chart/Chart.lock') }}
          restore-keys: |
            ${{ runner.os }}-helm-deps-

      - name: Add Helm repos
        working-directory: chart
        run: |
          if [ -f "./Chart.lock" ]; then
            yq --indent 0 '.dependencies | map(["helm", "repo", "add", .name, .repository] | join(" ")) | .[]' "./Chart.lock"  | sh --;
          fi

      - name: Download dependencies for Helm chart
        working-directory: chart
        if: ${{ steps.cache.outputs.cache-hit != true }}
        run: |
          helm dependency build

      - name: Package Helm chart
        working-directory: chart
        run: |
          helm package .

      - name: Push Helm chart to GHCR
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        working-directory: chart
        run: |
          helm push agenticxp-*.tgz oci://ghcr.io/alinflorin/charts

  deploy:
    runs-on: ubuntu-latest
    needs: [docker-merge, helm]
    strategy:
      matrix:
        environment: [stg, uat, prd]

    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    environment:
      name: ${{ matrix.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write Kubeconfig to file
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml

      - name: Substitute Secrets Action
        uses: faradaytrs/substitute-secrets-action@2.1
        with:
          input: "chart/values-${{ matrix.environment }}.yaml"
          substitutionRegex: \$\{([A-Z0-9_]+)\}
          substitutionData: ${{ toJSON(secrets) }}
          throwOnDataMissing: false

      - name: Setup Tailscale
        uses: tailscale/github-action@v3
        with:
          authkey: ${{ secrets.TAILSCALE_KEY }}
          use-cache: "true"

      - name: Log in to GHCR for Helm
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin

      - name: Deploy to ${{ matrix.environment }} environment with Helm
        run: |
          helm upgrade --kubeconfig ${{ github.workspace }}/kubeconfig.yaml --install --namespace agenticxp-${{ matrix.environment }} --create-namespace --values chart/values-${{ matrix.environment }}.yaml --version=${{ env.VERSION }} agenticxp oci://ghcr.io/alinflorin/charts/agenticxp

      - name: Remove kubeconfig file
        if: always()
        run: rm -rf ${{ github.workspace }}/kubeconfig.yaml || true
