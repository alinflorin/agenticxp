env: stg
ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: 'letsencrypt'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
  className: "nginx-private"
  hosts:
    - host: agenticxp-stg.internal.huna2.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: agenticxp-ingress-tls
      hosts:
        - agenticxp-stg.internal.huna2.com

mongodb:
  userDatabase:
    password: '${MONGODB_PASSWORD}'

dex:
  ingress:
    hosts:
      - host: idp.agenticxp-stg.internal.huna2.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: dex-ingress-tls
        hosts:
          - idp.agenticxp-stg.internal.huna2.com
    annotations:
      cert-manager.io/cluster-issuer: 'letsencrypt'
      nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    className: "nginx-private"
  config:
    issuer: https://idp.agenticxp-stg.internal.huna2.com
    connectors:
      - type: google
        id: google
        name: Google
        config:
          clientID: ${GOOGLE_CLIENT_ID}
          clientSecret: ${GOOGLE_CLIENT_SECRET}
          redirectURI: https://idp.agenticxp-stg.internal.huna2.com/callback
    staticClients:
      - id: agenticxp
        public: true
        name: 'agenticxp'
        redirectURIs:
        - 'https://agenticxp-stg.internal.huna2.com'